{
  "name": "Victor Ollama Chat Enhancement",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "victor-chat",
        "options": {
          "responseData": "allEntries",
          "responseMode": "lastNode"
        }
      },
      "id": "webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "victor-chat"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "dcs"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains", 
              "value2": "lua"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "waypoint"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "xsaf"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "mission"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "aircraft"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "helicopter"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "trigger"
            },
            {
              "value1": "={{$json.messages[0].content.toLowerCase()}}",
              "operation": "contains",
              "value2": "script"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "dcs-detector",
      "name": "Is DCS Query?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.0.130:8000/enhance_prompt",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{$node['Webhook'].json.messages[0].content}}"
            },
            {
              "name": "model",
              "value": "={{$node['Webhook'].json.model}}"
            }
          ]
        },
        "options": {}
      },
      "id": "victor-enhance",
      "name": "Enhance with Victor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.0.130:11434/api/chat",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"model\": \"{{ $json.model || 'codellama:latest' }}\",\n  \"messages\": {{ JSON.stringify($json.messages) }},\n  \"stream\": {{ $json.stream || false }},\n  \"options\": {\n    \"temperature\": 0.7,\n    \"num_predict\": 2048\n  }\n}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "ollama-chat",
      "name": "Ollama Chat",
      "type": "n8n-nodes-base.httpRequest", 
      "typeVersion": 3,
      "position": [850, 300]
    },
    {
      "parameters": {
        "functionCode": "// Get the enhanced prompt from Victor\nconst victorResponse = $node['Enhance with Victor'].json;\nconst originalRequest = $node['Webhook'].json;\n\n// Build enhanced messages array\nconst enhancedMessages = [...originalRequest.messages];\n\n// If Victor provided context, prepend it as a system message\nif (victorResponse.enhanced_prompt && victorResponse.enhanced_prompt !== originalRequest.messages[0].content) {\n  enhancedMessages.unshift({\n    role: 'system',\n    content: victorResponse.enhanced_prompt\n  });\n}\n\n// Select the best model for DCS queries\nlet model = originalRequest.model;\nif (model === 'claude-3-7-sonnet-latest' || !model) {\n  // Map to best available Ollama coding model\n  model = 'codellama:latest';\n}\n\nreturn {\n  json: {\n    model: model,\n    messages: enhancedMessages,\n    stream: originalRequest.stream || false,\n    temperature: 0.7,\n    options: {\n      num_predict: 2048\n    }\n  }\n};"
      },
      "id": "prepare-enhanced",
      "name": "Prepare Enhanced Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [850, 100]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.0.130:11434/api/chat",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "ollama-enhanced",
      "name": "Ollama with Context",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 100]
    },
    {
      "parameters": {
        "functionCode": "// Format the response for Open-WebUI\nconst ollamaResponse = $json;\n\n// Standard Open-WebUI response format\nreturn {\n  json: {\n    id: 'chatcmpl-' + Date.now(),\n    object: 'chat.completion',\n    created: Math.floor(Date.now() / 1000),\n    model: ollamaResponse.model,\n    choices: [{\n      index: 0,\n      message: ollamaResponse.message || {\n        role: 'assistant',\n        content: ollamaResponse.response || 'No response generated'\n      },\n      finish_reason: 'stop'\n    }],\n    usage: {\n      prompt_tokens: ollamaResponse.prompt_eval_count || 0,\n      completion_tokens: ollamaResponse.eval_count || 0,\n      total_tokens: (ollamaResponse.prompt_eval_count || 0) + (ollamaResponse.eval_count || 0)\n    }\n  }\n};"
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1250, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Is DCS Query?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is DCS Query?": {
      "main": [
        [
          {
            "node": "Enhance with Victor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ollama Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhance with Victor": {
      "main": [
        [
          {
            "node": "Prepare Enhanced Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Enhanced Request": {
      "main": [
        [
          {
            "node": "Ollama with Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama with Context": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {}
}